import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram import Router
from aiogram.filters import Command
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

API_TOKEN = os.getenv("API_TOKEN")  # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
bot = Bot(token=API_TOKEN)

# –ù–æ–≤—ã–π —Å–ø–æ—Å–æ–± —Å–æ–∑–¥–∞–Ω–∏—è Dispatcher –≤ aiogram 3.x
storage = MemoryStorage()
dp = Dispatcher(bot=bot, storage=storage)  # –ü–µ—Ä–µ–¥–∞–µ–º bot —á–µ—Ä–µ–∑ –∫–ª—é—á–µ–≤–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç

# –°–æ–∑–¥–∞–µ–º Router –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
router = Router()

# –¢–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞
step_1_text = """
Hallo liebe/r {Vorname}! üòä

üéâ HERZLICH WILLKOMMEN IM TEAM! üéâ
Ich freue mich, dich auf deinem Weg bei RINGANA zu begleiten. Gemeinsam schaffen wir Gro√ües ‚Äì mit Leichtigkeit und Freude.
"""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞ –∏ –∫–Ω–æ–ø–∫–∏
async def send_step(chat_id):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
    await bot.send_message(chat_id, step_1_text.format(Vorname="User"))

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
    keyboard = InlineKeyboardMarkup()
    button = InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="next_1")
    keyboard.add(button)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É
    await bot.send_message(chat_id, "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.", reply_markup=keyboard)

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Router
@router.message(Command('start'))  # –ò—Å–ø–æ–ª—å–∑—É–µ–º Command —Ñ–∏–ª—å—Ç—Ä
async def send_welcome(message: types.Message):
    print(f"–ö–æ–º–∞–Ω–¥–∞ /start –ø–æ–ª—É—á–µ–Ω–∞ –æ—Ç {message.from_user.first_name}")
    await send_step(message.chat.id)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–î–∞–ª—å—à–µ"
@router.callback_query(lambda c: c.data == "next_1")
async def next_step(callback_query: types.CallbackQuery):
    # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É (–Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Å—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º)
    await callback_query.message.edit_text("–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É...")

# –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
dp.include_router(router)

async def main():
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    await dp.start_polling()

# –ò—Å–ø–æ–ª—å–∑—É–µ–º asyncio.run –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ main
if __name__ == '__main__':
    asyncio.run(main())
