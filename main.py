import os
import requests
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram import Router

API_TOKEN = os.getenv("API_TOKEN")
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())

# –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ —Å Google Drive
video_id = "1KlIj_WqsURqs7wKzuySAtfNZf1MzGSBe"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π ID –≤–∏–¥–µ–æ
video_url = f"https://drive.google.com/uc?id={video_id}"

# –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∏–¥–µ–æ –ª–æ–∫–∞–ª—å–Ω–æ
video_path = "video.mp4"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ —Å Google Drive
def download_video(url, path):
    response = requests.get(url, allow_redirects=True)
    with open(path, 'wb') as file:
        file.write(response.content)
    print(f"–í–∏–¥–µ–æ —Å–∫–∞—á–∞–Ω–æ –ø–æ –ø—É—Ç–∏: {path}")

# –¢–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞
step_1_text = """
Hallo liebe/r {Vorname}! üòä

üéâ HERZLICH WILLKOMMEN IM TEAM! üéâ
Ich freue mich, dich auf deinem Weg bei RINGANA zu begleiten. Gemeinsam schaffen wir Gro√ües ‚Äì mit Leichtigkeit und Freude.
"""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ –∏ —Ç–µ–∫—Å—Ç–∞
async def send_step(chat_id):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
    await bot.send_message(chat_id, step_1_text.format(Vorname="User"))

    # –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ
    download_video(video_url, video_path)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
    with open(video_path, 'rb') as video:
        await bot.send_video(chat_id, video, caption="–ü–µ—Ä–≤–æ–µ –≤–∏–¥–µ–æ!")

    # –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    os.remove(video_path)

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
    keyboard = InlineKeyboardMarkup()
    button = InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="next_1")
    keyboard.add(button)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É
    await bot.send_message(chat_id, "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.", reply_markup=keyboard)

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /start
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    # –ù–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞
    await send_step(message.chat.id)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–î–∞–ª—å—à–µ"
@dp.callback_query_handler(lambda c: c.data == "next_1")
async def next_step(callback_query: types.CallbackQuery):
    # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É (–Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Å—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º)
    await callback_query.message.edit_text("–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É...")

async def main():
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    await dp.start_polling()

if __name__ == '__main__':
    asyncio.run(main())
